#include "list.h"

/*List::~List() //Деструктор вынесен за класс
{
    while (Head!=NULL)  //Пока по адресу не пусто
     {
        element *temp=Head->Next; //Временная переменная для хранения адреса следующего элемента
        delete Head; //Освобождаем адрес обозначающий начало
        Head=temp; //Меняем адрес на следующий
     }
}

void List::Add(int x) //Функция добавления элементов в список
{
 element *temp=new element; //При каждом вызове выделяется память
temp->x=x; //Записываем x в элемент структуры  element (в x структуры element)
temp->Next=Head; //Указываем, что след. элемент это объект по адресу Head
Head=temp; //Указываем, что последний активный элемент это только что введенный
}

void List::Show() //Функция отображения списка на экране
{
 element *temp=Head; //Определяем указатель, который изначально он равен адресу начала списка

 while (temp!=NULL) //До тех пор пока не встретит пустое значение
 {
  cout<<temp->x<<" "; //Выведет элемент x из списка
  temp=temp->Next; //Указываем, что далее нам нужен следующий элемент
 }
}*/

